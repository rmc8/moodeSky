name: CI - Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Frontend (SvelteKit) チェック
  frontend:
    name: Frontend Quality Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./moodeSky

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./moodeSky/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: TypeScript type check
        run: npm run check

      - name: Lint check
        run: npm run lint
        continue-on-error: true  # リント設定がまだの場合

      - name: Build frontend
        run: npm run build

      - name: Frontend tests
        run: npm test
        continue-on-error: true  # テストがまだの場合

  # Backend (Rust/Tauri) チェック
  backend:
    name: Backend Quality Checks
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./moodeSky/src-tauri

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './moodeSky/src-tauri'

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Rust format check
        run: cargo fmt --all -- --check

      - name: Rust clippy check
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Rust build
        run: cargo build --verbose

      - name: Rust tests
        run: cargo test --verbose

  # セキュリティチェック
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Rust security audit
        run: cargo audit --json --output audit-results.json
        working-directory: ./moodeSky/src-tauri
        continue-on-error: true

      - name: Node.js security audit
        run: npm audit --audit-level moderate
        working-directory: ./moodeSky
        continue-on-error: true

  # 統合テスト (Tauri アプリ全体)
  integration:
    name: Integration Tests
    needs: [frontend, backend]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./moodeSky

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./moodeSky/package-lock.json

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './moodeSky/src-tauri'

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install dependencies
        run: npm ci

      - name: Build Tauri app (debug)
        run: npm run tauri build -- --debug
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

  # コードカバレッジ (オプション)
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./moodeSky/src-tauri

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Generate coverage report
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./moodeSky/src-tauri/lcov.info
          directory: ./moodeSky/src-tauri
          flags: rust
          name: rust-coverage
        continue-on-error: true